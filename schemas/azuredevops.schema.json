{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "azuredevops.schema.json#",
  "title": "AzureDevOpsConnection",
  "description": "Configuration for a connection to Azure DevOps.",
  "allowComments": true,
  "type": "object",
  "additionalProperties": false,
  "required": ["url", "username"],
  "oneOf": [
    {
      "required": ["token"],
      "properties": {
        "windowsPassword": { "type": "null" }
      }
    },
    {
      "required": ["windowsPassword"],
      "properties": {
        "token": { "type": "null" }
      }
    }
  ],
  "properties": {
    "url": {
      "description": "URL for Azure DevOps Services, set to https://dev.azure.com.",
      "type": "string",
      "!go": {
        "typeName": "NormalizedURL"
      },
      "pattern": "^https?://",
      "not": {
        "type": "string",
        "pattern": "example\\.com"
      },
      "format": "uri",
      "examples": ["https://dev.azure.com"]
    },
    "rateLimit": {
      "description": "Rate limit applied when making background API requests.",
      "title": "AzureDevOpsRateLimit",
      "type": "object",
      "required": ["enabled", "requestsPerHour"],
      "properties": {
        "enabled": {
          "description": "true if rate limiting is enabled.",
          "type": "boolean",
          "default": false
        },
        "requestsPerHour": {
          "description": "Requests per hour permitted. This is an average, calculated per second. Internally, the burst limit is set to 100, which implies that for a requests per hour limit as low as 1, users will continue to be able to send a maximum of 100 requests immediately, provided that the complexity cost of each request is 1.",
          "type": "number",
          "minimum": 0
        }
      },
      "default": {
        "enabled": false,
        "requestsPerHour": 0
      }
    },
    "gitURLType": {
      "description": "The type of Git URLs to use for cloning and fetching Git repositories.\n\nIf \"http\", Sourcegraph will access repositories using Git URLs of the form http(s)://dev.azure.com/myrepo.git.\n\nIf \"ssh\", Sourcegraph will access repositories using Git URLs of the form git@ssh.dev.azure.com:v3/myrepo. See the documentation for how to provide SSH private keys and known_hosts: https://sourcegraph.com/docs/admin/repo/auth.",
      "type": "string",
      "enum": ["http", "ssh"],
      "default": "http"
    },
    "repositoryPathPattern": {
      "description": "The pattern used to generate the corresponding Sourcegraph repository name for a Azure DevOps repository.\n\n - \"{host}\" is replaced with the Azure DevOps URL's host (such as dev.azure.com)\n - \"{orgName}\" is replaced with the repository's parent projects owning organization (or collection on DevOps server)\n - \"{projectName}\" is replaced with the repository's parent project\n - \"{repositoryName}\" is replaced with the repository's name.\n\nFor example, if your Azure DevOps is https://dev.azure.com and your Sourcegraph is https://src.example.com, then a repositoryPathPattern of \"{host}/{orgName}/{projectName}/{repositoryName}\" would mean that a Azure DevOps repository at https://dev.azure.com/MYORG/MYPROJECT/MYREPO is available on Sourcegraph at https://src.example.com/dev.azure.com/MYORG/MYPROJECT/MYREPO.\n\nIt is important that the Sourcegraph repository name generated with this pattern be unique to this code host. If different code hosts generate repository names that collide, Sourcegraph's behavior is undefined.",
      "type": "string",
      "default": "{host}/{orgName}/{projectName}/{repositoryName}",
      "examples": ["{projectName}/{repositoryName}"]
    },
    "gitSSHCredential": {
      "description": "SSH keys to use when cloning Git repo.",
      "$ref": "git.schema.json#/definitions/gitSSHCredential"
    },
    "gitSSHCipher": {
      "description": "SSH cipher to use when cloning via SSH. Must be a valid choice from `ssh -Q cipher`.",
      "$ref": "git.schema.json#/definitions/gitSSHCipher"
    },
    "enforcePermissions": {
      "description": "A flag to enforce Azure DevOps repository access permissions",
      "type": "boolean",
      "default": false
    },
    "username": {
      "description": "A username for authentication with the Azure DevOps code host. Typically an email address when connect to Azure DevOps Services (cloud) and a domain\\username when connecting to Azure DevOp Server (onPrem)",
      "type": "string",
      "minLength": 1
    },
    "token": {
      "description": "The Personal Access Token associated with the Azure DevOps username used for authentication.",
      "type": "string",
      "minLength": 1
    },
    "windowsPassword": {
      "description": "Windows account password (Azure Devops Server OnPrem Only): This is needed to clone the repo, the Token will be used for REST API calls",
      "type": "string",
      "minLength": 1
    },
    "projects": {
      "description": "An array of projects \"org/project\" strings specifying which Azure DevOps projects' repositories should be mirrored on Sourcegraph.",
      "type": "array",
      "items": { "type": "string", "pattern": "^[\\w-]+/[\\w.-]+([ ]*[\\w.-]+)*$" },
      "examples": [["org/project"]]
    },
    "orgs": {
      "description": "An array of organization names identifying Azure DevOps organizations whose repositories should be mirrored on Sourcegraph.",
      "type": "array",
      "items": { "type": "string", "pattern": "^[\\w-]+$" },
      "examples": [["name"], ["kubernetes", "golang", "facebook"]]
    },
    "exclude": {
      "description": "A list of repositories to never mirror from Azure DevOps Services.",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "title": "ExcludedAzureDevOpsServerRepo",
        "additionalProperties": false,
        "anyOf": [{ "required": ["name"] }, { "required": ["id"] }, { "required": ["pattern"] }],
        "properties": {
          "name": {
            "description": "The name of an Azure DevOps Services organization, project, and repository (\"orgName/projectName/repositoryName\") to exclude from mirroring.",
            "type": "string",
            "pattern": "^[\\w./ -]*?$"
          },
          "pattern": {
            "description": "Regular expression which matches against the name of an Azure DevOps Services repo.",
            "type": "string",
            "format": "regex"
          }
        }
      },
      "examples": [
        [{ "name": "myorg/myproject/myrepo" }],
        [
          { "name": "myorg/myproject/myrepo" },
          { "name": "myorg/myproject/myotherrepo" },
          { "pattern": "^topsecretproject/.*" }
        ]
      ]
    },
    "maxDeletions": {
      "description": "The maximum number of repos that will be deleted per sync. A value of 0 or less indicates no maximum.",
      "type": "integer",
      "default": 0
    }
  }
}
